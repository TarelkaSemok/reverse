#!/usr/bin/env python
# coding: utf-8

# In[2]:


f28l = []
v0 = [0]*20;
v0[0] = [26, 6, 125]
v6 = [0]*11
v0[1] = [64, 118, -91, 90, 7, -17, -114, 118, -49, 31, -40]
v6[3] = 68
v0[2] = [8, 1, 36]
v6[0] = 103
v0[13] = [97, 110, 100, 114, 111, 105, 100, 46, 116, 101, 108, 101, 112, 104, 111, 110, 121, 46, 84, 101, 108, 101, 112, 104, 111, 110, 121, 77, 97, 110, 97, 103, 101, 114]
v6[1] = 101
v6[2] = 116
v0[3] = [-70, -16, 42, -68, 127, 34, -66, -74, -102]
v2 = [0]*3
v2[2] = 16
v2[1] = 88
v6[4] = 101
v6[5] = 118
v6[6] = 105
v6[7] = 99;
v6[8] = 101;
v6[9] = 73;
v0[4] = v2;
v0[5] = [14, 6, 22];
v6[10] = 100;
v3 = [0]*5;
v3[2] = 103;
v3[4] = 104;
v3[3] = 116;
v3[0] = 101;
v3[1] = 110
v0[6] = v3;
v0[7] = [106, 97, 118, 97, 46, 108, 97, 110, 103, 46, 83, 116, 114, 105, 110, 103]
v4 = [0]*12;
v4[10] = 101;
v4[1] = 101;
v4[3] = 82;
v5 = [0]*15
v4[0] = 103;
v4[7] = 117;
v4[11] = 115;
v4[2] = 116;
v5[0] = 48;
v5[2] = 48;
v0[16] = [106, 97, 118, 97, 46, 108, 97, 110, 103, 46, 79, 98, 106, 101, 99, 116]
v5[1] = 48;
v4[4] = 101;
v5[3] = 48;
v4[9] = 99;
v0[12] = [106, 97, 118, 97, 46, 108, 97, 110, 103, 46, 83, 121, 115, 116, 101, 109]
v5[4] = 48;
v4[5] = 115;
v4[8] = 114;
v0[17] = v6;
v5[5] = 48;
v8 = [0]*6;
v5[6] = 48;
v5[7] = 48;
v0[14] = [101, 120, 105, 116]
v5[8] = 48;
v5[9] = 48;
v8[1] = 113;
v4[6] = 111;
v5[10] = 48;
v0[9] = v4;
v0[8] = [97, 110, 100, 114, 111, 105, 100, 46, 99, 111, 110, 116, 101, 110, 116, 46, 67, 111, 110, 116, 101, 120, 116]
v5[11] = 48;
v8[0] = 101;
v8[3] = 97;
v5[12] = 48;
v8[2] = 117;
v5[13] = 48;
v8[4] = 108;
v8[5] = 115;
v5[14] = 48;
v0[10] = [83, 72, 65, 45, 49]
v0[11] = v5;
v0[15] = v8;
f28l = v0;


# In[3]:


print("".join([chr(c) for c in f28l[7]]))
print("".join([chr(c) for c in f28l[8]]))
print("".join([chr(c) for c in f28l[9]]))
print("".join([chr(c) for c in f28l[6]]))
print("".join([chr(c) for c in f28l[15]]))
print("".join([chr(c) for c in f28l[12]]))
print("".join([chr(c) for c in f28l[13]]))
print("".join([chr(c) for c in f28l[17]]))
print("".join([chr(c) for c in f28l[14]]))
print("".join([chr(c) for c in f28l[11]]))
print(f28l[4][2])
print("".join([chr(c) for c in f28l[10]]))


# In[10]:


import hashlib
from Crypto.Cipher import AES

# get IMEI of a device
# LDPlayer IMEI: 865166020507912
# pass length without '-' is 16

def getbyte(seed, a, b, c):
    v0 = a % 25;
    v1 = b % 3;
    if (v0 % 2 == 0):
        return (((seed >> v0) & 255) ^ ((seed >> v1) | c))
    else:
        return (((seed >> v0) & 255) ^ ((seed >> v1) & c))


s_list = [getbyte(123, f28l[5][0], f28l[0][2], f28l[0][1]), 2, getbyte(321, f28l[0][1], f28l[5][0], f28l[0][2])]

hash1 = hashlib.sha1(bytearray(s_list)).digest()[:16]
secret = f28l[1] + f28l[3]
secret1 = (secret + [122, 125, -19, 33, 69, 71, 112, -6, 36, 19, -90, 118])
secret1 = bytearray([c&0xFF for c in secret1])

cipher = AES.new(hash1,1)
text = cipher.decrypt(secret1)
print(hash1.hex(), secret1.hex())
print(text)


# In[8]:




